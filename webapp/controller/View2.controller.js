sap.ui.define([
	"deloitte/usi/fn/controller/BaseController",
	"sap/m/MessageBox",
	"sap/m/MessageToast"
], function(Controller, MsgBox, MsgTst) {
	"use strict";
	return Controller.extend("deloitte.usi.fn.controller.View2", {
		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf deloitte.usi.fn.view.View2
		 */
			onInit: function() {
		      this.oRouter = this.getOwnerComponent().getRouter();
		      this.oRouter.attachRouteMatched(this.Herculis, this);
			},
			Herculis:function(oEvent){
			// console.log(oEvent);	
			var myIndex = oEvent.getParameter("arguments").Syed;
			var sPath = '/fruits/' + myIndex;
			this.getView().bindElement(sPath);
			}
			, 
		onBack: function() {
			var oView = this.getView();
			var oParent = oView.getParent();
			oParent.to("idView1");
		},
		idOfTableFiled: null,
		idOfNames:null,
		onConfirm: function(oEvent) {
			var oLabel = oEvent.getParameter("selectedItem").getLabel();
			sap.ui.getCore().byId(this.idOfTableFiled).setValue(oLabel);
		}, 
		onValueHelp: function(oEvent) {
			this.idOfTableFiled = oEvent.getSource().getId();
			if(!this.idOfNames){
			this.idOfNames = new sap.ui.xmlfragment("deloitte.usi.fn.fragments.popup", this);
			
			// if (oSelectDialog is not defined){
			this.idOfNames.bindAggregation("items",{
				path: "/fruits",
					template: new sap.m.DisplayListItem({
						label: "{name}"
					})	
				});
				this.idOfNames.setTitle("Brand New Title");
			this.getView().addDependent(this.idOfNames);
			}
			this.idOfNames.open();
				

		// 	var oSelectDialog = new sap.m.SelectDialog({
		// 		title: "Select any Value",
		// 		items: {
		// 			path: "/fruits",
		// 			template: new sap.m.DisplayListItem({
		// 				label: "{name}"
		// 			})
		// 		},
		// 		confirm: [
		// 				this.onConfirm,
		// 				this
		// 			] // items: new sap.m.DisplayListItem({
		// 			//  path:"/fruits",
		// 			//  template: new sap.m.Text({
		// 			//  	text="{name}"
		// 			//  })
		// 			// })
		// 			// }
		// 	});
		// 	this.getView().addDependent(oSelectDialog);
		// 	oSelectDialog.open();
		// 	console.log(oEvent.getSource().getId());
		},
		onSave: function() {
			MsgBox.confirm("Would you like to save the Data", {
				title: "confirm",
				onClose: function(choice) {
						if (choice === "OK") {
							MsgTst.show("Your Data is saved successfully");
						} else {
							MsgTst.show("Your Data is not saved");
						}
					} //actions: [ sap.m.MessageBox.Action.OK,
					// sap.m.MessageBox.Action.Cancel ]   
			});
		},
		navButtonPress: function() {
				var oView = this.getView();
				var oParent = oView.getParent();
				oParent.to("idView1");
			}
			/**
			 * Similar to onAfterRendering, but this hook is invoked before the controller's View is re-rendered
			 * (NOT before the first rendering! onInit() is used for that one!).
			 * @memberOf deloitte.usi.fn.view.View2
			 */
			//	onBeforeRendering: function() {
			//
			//	},
			/**
			 * Called when the View has been rendered (so its HTML is part of the document). Post-rendering manipulations of the HTML could be done here.
			 * This hook is the same one that SAPUI5 controls get after being rendered.
			 * @memberOf deloitte.usi.fn.view.View2
			 */
			//	onAfterRendering: function() {
			//
			//	},
			/**
			 * Called when the Controller is destroyed. Use this one to free resources and finalize activities.
			 * @memberOf deloitte.usi.fn.view.View2
			 */
			//	onExit: function() {
			//
			//	}
			,
		/**
		 *@memberOf deloitte.usi.fn.controller.View2
		 */
		onFilter: function(oEvent) {
			//This code was generated by the layout editor.
	this.idOfTableFiled = oEvent.getSource().getId();
			// if (oSelectDialog is not defined){
			var oSelectDialog = new sap.m.SelectDialog({
				title: "Select any Value",
				items: {
					path: "/fruits",
					template: new sap.m.DisplayListItem({
						label: "{name}"
					})
				},
				confirm: [
						this.onConfirm,
						this
					] // items: new sap.m.DisplayListItem({
					//  path:"/fruits",
					//  template: new sap.m.Text({
					//  	text="{name}"
					//  })
					// })
					// }
			});
			this.getView().addDependent(oSelectDialog);
			oSelectDialog.open();			
		}
	});
});